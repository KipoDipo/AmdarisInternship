@startuml Class Diagram

hide methods

interface IBase
{
    +id : int
    +createdAt : DateTime
    +updatedAt : DateTime
}

interface IDeletable
{
    +isDeleted : boolean
    +deletedAt : DateTime
}

abstract User
{
    +email: string
    +password: string
    +username: string
    +firstName: string
    +lastName?: string
    +phoneNumber?: string
}

class Admin
{
}

class Listener
{
    +following: List<Artist>
    +createdPlaylists: List<Playlist>
    +likedPlaylists: List<Playlist>
    +likedSongs: List<Song>
    +isSubscribed: boolean
    +subscriptionDate: DateTime
}

class Distributor
{
    +artists: List<Artist>
}

class Artist
{
    +followers: List<Listener>
    +albums: List<Album>
    +singles: List<Song>
}

class Album
{
    +title: string
    +releaseDate: DateTime
    +songs: List<Song>
}

class Song
{
    +title: string
    +duration: TimeSpan
    +releaseDate: DateTime
    +data: byte[]
}

class Playlist
{
    +title: string
    +songs: List<Song>
    +createdBy: Listener
}


IBase <|-- IDeletable
' IDeletable <|--r Playlist
' IDeletable <|--r User
' IDeletable <|--r Album
' IDeletable <|--r Song

User <|-- Admin
User <|-- Listener
User <|-- Artist
User <|-- Distributor

Artist "0..n" --l "0..n" Listener : "\t\t"
Artist "1  " *-- "0..n  " Song
Artist "1" *-- "0..n   " Album

' Artist "0..n" --r "1" Distributor : "Manages\t\t"
Distributor "1" --l* "0..n" Artist : "Manages\t"

Album "1" --l "1..n" Song : "\t"

Playlist "0..n" --r "0..n" Song : "\t\t"

Listener -- Playlist : "likes\t\t"
Listener --* Playlist : "creates"
Listener -- Song : "likes"
' Song "0..n" -- "0..n" Playlist : "\t\t"
' Playlist "0..n" -- "0..n" Listener : "\t\t"

@enduml